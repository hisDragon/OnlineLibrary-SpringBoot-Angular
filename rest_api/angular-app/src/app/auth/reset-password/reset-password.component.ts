import { Component, OnInit } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';
import { Router } from '@angular/router';
import { IUser } from 'src/app/models/IUser';
import { UserService } from 'src/app/services/user.service';


@Component({
  selector: 'app-reset-password',
  templateUrl: './reset-password.component.html',
  styleUrls: ['./reset-password.component.css']
})
export class ResetPasswordComponent implements OnInit {

  form: FormGroup = new FormGroup({

    newpassword: new FormControl(
      '',
      Validators.compose([Validators.required, Validators.minLength(8)])
    ),
    repassword: new FormControl(
      '',
      Validators.compose([Validators.required, Validators.minLength(8)])
    ),
    cpassword: new FormControl(
      '',
      Validators.compose([Validators.required, Validators.minLength(8)])
    )

  });

  constructor(
    private userService: UserService,
    private router: Router
  ) { }

  ngOnInit(): void {
  }

  onReset(): void {
    const currentPwd: string = this.form.get("cpassword").value;
    const newPwd: string = this.form.get("newpassword").value;
    const rePwd: string = this.form.get("repassword").value;

    if(this.userService.userInfo.userPassword === currentPwd){
      // current password entered is same == success
      if(newPwd === currentPwd){
        // new and current pwd same
        alert("New and Old Password CANNOT be the same");
        this.form.reset();
      }else{
        // new and current password are not the same
        if(newPwd !== rePwd){
          // new pwd is !== re pwd
          alert("Re-entered Password is WRONG");
          this.form.reset();
        }else{
          // everything success
          let user: IUser = {
            userId: 1,
            userName: this.userService.userInfo.userName,
            userPhone: this.userService.userInfo.userPhone,
            userAvatar: this.userService.userInfo.userAvatar,
            userEmail: this.userService.userInfo.userEmail,
            userPassword: newPwd
          }

          let ignoreList = [ 'userId' ]; // ignoring ID attribute because it is automatically generated by Spring data JPA
          function replacer(key, value){if (ignoreList.indexOf(key) > -1) return undefined;else return value;}
          let data = JSON.stringify(user, replacer);

          this.userService.postUsers(user).subscribe(
            res => {
              alert("Please Login again to Continue");
              this.userService.isLoggedIn = false;
              this.userService.userInfo = null;
              this.router.navigate(['/login']);
            },
            err => console.log(err)
          );

        }
      }
    }else{
      // wrong current password
      alert("You Current Password is WRONG");
      this.form.reset();
    }

  }

}
