import { Component, OnInit } from '@angular/core';

// reactive forms
import { FormControl, FormGroup, Validators } from '@angular/forms';

import { Router } from '@angular/router';
import { IUser } from '../../models/IUser';
import { UserService } from '../../services/user.service';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent implements OnInit {

  // injecting/autowiring service dependency
  constructor(private userService: UserService,
    private router: Router) { }

  ngOnInit(): void {
  }

  form = new FormGroup({
    email: new FormControl('', [
      Validators.required,
      Validators.email
    ]),
    password: new FormControl('', [
      Validators.required,
      Validators.minLength(8)
    ])
    
   });

  onSubmit(){
    let mail: string = this.form.get("email").value;
    let pwd: string = this.form.get("password").value;

    this.userService.getByEmail(mail).subscribe(
      user => {
        if(user && user.userPassword === pwd) {
          this.userService.isLoggedIn = true; // user is now logged in
          this.userService.userInfo = user; // for info of the user usage in other components
          this.router.navigate(['/dashboard']);
        }
        else {
          alert('Incorrect email/password');
          this.userService.isLoggedIn = false;
          this.userService.userInfo = null;
        }
      },
      error => {
        console.log(error);
        this.userService.isLoggedIn = false;
        this.userService.userInfo = null;
      }
    );

  }

  // maintaining state for sending it back to server
  // private registerState: IUser = {
  //   userId: 1,
  //   userName: null,
  //   userPhone: null,
  //   userAvatar: null,
  //   userEmail: null,
  //   userPassword: null
  // };

  // // register button handler
  // onRegister(): void {
  //   this.registerState.userName = (document.getElementById('rfirstName') as HTMLInputElement).value + ' ' + (document.getElementById('rlastName') as HTMLInputElement).value;
  //   this.registerState.userPhone = (document.getElementById('rphone') as HTMLInputElement).value;
  //   this.registerState.userAvatar = 'default/path/to/avatar'; // default for later use
  //   this.registerState.userEmail = (document.getElementById('remail') as HTMLInputElement).value;
  //   this.registerState.userPassword = this.password_confirm;

  //   let ignoreList = [ 'userId' ]; // ignoring ID attribute because it is automatically generated by Spring data JPA
  //   function replacer(key, value){if (ignoreList.indexOf(key) > -1) return undefined;else return value;}
  //   let data = JSON.stringify(this.registerState, replacer);

  //   this.userService.postUsers(data).subscribe(
  //     user => {
  //       this.userService.isLoggedIn = true;
  //       this.userService.userInfo = user;
  //       this.router.navigate(['/dashboard']);
  //     },
  //     error => {
  //       console.log(error);
  //       this.userService.isLoggedIn = false;
  //       this.userService.userInfo = null;
  //     }
  //   );
    
  // }

}
