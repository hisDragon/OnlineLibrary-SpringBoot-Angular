import { Component, OnInit } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';
import { Router } from '@angular/router';
import { IUser } from 'src/app/models/IUser';
import { UserService } from 'src/app/services/user.service';

@Component({
  selector: 'app-register',
  templateUrl: './register.component.html',
  styleUrls: ['./register.component.css']
})
export class RegisterComponent implements OnInit {

  form: FormGroup = new FormGroup({
    firstName: new FormControl('', Validators.required),
    lastName: new FormControl('', Validators.required),
    phone: new FormControl(
      '',
      [Validators.required, Validators.pattern('^[0-9]*$'), Validators.minLength(10), Validators.maxLength(10)]
    ),
    email: new FormControl(
      '',
      Validators.compose([Validators.required, Validators.email])
    ),
    password: new FormControl(
      '',
      Validators.compose([Validators.required, Validators.minLength(8)])
    )
  });

  constructor(private userService: UserService, private router: Router) { }

  ngOnInit(): void {
  }

  onSubmit(){
    
    let registerUser: IUser = {
      userId: 1,
      userName: this.form.get('firstName').value + " " + this.form.get('lastName').value,
      userAvatar: '/path/to/avatar',
      userPhone: this.form.get('phone').value,
      userEmail: this.form.get('email').value,
      userPassword: this.form.get('password').value
    };

    let ignoreList = [ 'userId' ]; // ignoring ID attribute because it is automatically generated by Spring data JPA
    function replacer(key, value){if (ignoreList.indexOf(key) > -1) return undefined;else return value;}
    let data = JSON.stringify(registerUser, replacer);

    this.userService.postUsers(data).subscribe(
      user => {
        this.userService.isLoggedIn = true;
        this.userService.userInfo = user;
        this.router.navigate(['/dashboard']);
      },
      error => console.log("Error : (register) ", error)
    );

  }

}
