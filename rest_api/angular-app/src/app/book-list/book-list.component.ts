import { Component, OnInit } from '@angular/core';
import { BookService } from '../services/book.service'
import { IBook } from '../models/IBook'
import { Router } from '@angular/router';
import { UserService } from '../services/user.service';
import { IUser } from '../models/IUser';
 

@Component({
  selector: 'app-book-list',
  templateUrl: './book-list.component.html',
  styleUrls: ['./book-list.component.css']
})
export class BookListComponent implements OnInit {
  mybooks: IBook[];

	constructor(
    private bookService: BookService,
    private router: Router,
    private userService: UserService
  ){}
  
  ngOnInit(): void {
    this.mybooks = this.bookService.books;
  }

  openNewTab(index): void {
    window.open(this.mybooks[index].bookPath);
  }

  onBorrow(): void {
    if(this.userService.isLoggedIn){
      // user is logged in
      
      if(this.userService.userInfo.borrowedBookId === 0){
        // book not borrowed can be borrowed
        let userUpdate: IUser = {
          userId: this.userService.userInfo.userId,
          userName: this.userService.userInfo.userName,
          userAvatar: this.userService.userInfo.userAvatar,
          userPhone: this.userService.userInfo.userPhone,
          userEmail: this.userService.userInfo.userEmail,
          userPassword: this.userService.userInfo.userPassword,
          addedBooks: [],
          borrowedBookId: this.bookService.books[0].bookId
        };

        let ignoreList = [ 'userId' ]; // ignoring ID attribute because it is automatically generated by Spring data JPA
        function replacer(key, value){if (ignoreList.indexOf(key) > -1) return undefined;else return value;}
        let user = JSON.stringify(userUpdate, replacer);

        this.userService.postUsers(user).subscribe(
          (res: IUser) => {
            this.userService.userInfo = res;
            this.router.navigate(['/borrow']);
          },
          err => console.log(err)
        );

      }else{
        // some book is borrowed
        // check if this user has borrowed this book
        if(this.bookService.books[0].bookId === this.userService.userInfo.borrowedBookId){
          // it is the same user wow!
          this.router.navigate(['/borrow']);
        }else{
          // hell na
          alert("You have already Borrowed a Book, Please Return to Borrow");
          this.router.navigate(['/dashboard']);
        }
      }

    }else{
      // not logged in
      this.router.navigate(['/login']);
    }
  }

}
